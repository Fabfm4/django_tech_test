version: "2"
services:
    nginx:
        image: nginx:latest
        container_name: "${PROJECT_NAME}_nginx"
        ports:
            - "8000:8000"
        volumes:
            - ./app:/src/app
            - ./urbvan:/src/urbvan
            - ./urbvan_framework:/src/urbvan_framework
            - ./manage.py:/src/manage.py
            - ./media:/media
            - ./nginx:/etc/nginx/conf.d
        depends_on:
            - django
    redis:
        image: redis:2.8.19
        hostname: redis

    django:
        build: .
        hostname: "${PROJECT_NAME}_django"
        container_name: "${PROJECT_NAME}_django"
        command: bash -c "python manage.py collectstatic --noinput & python manage.py runserver 0.0.0.0:8000"
        volumes:
            - ./apps:/src/apps
            - ./urbvan:/src/urbvan
            - ./urbvan_framework:/src/urbvan_framework
            - ./manage.py:/src/manage.py
            - ./media:/media
        expose:
            - "8000"
        links:
            - postgresql:postgresql
            - redis:redis
        depends_on:
            - postgresql
            - redis
        environment:
            - C_FORCE_ROOT=true

    postgresql:
        image: postgres:9.3
        hostname: "${PROJECT_NAME}_db"
        container_name: "${PROJECT_NAME}_db"
        volumes_from:
            - data
        environment:
            POSTGRES_PASSWORD: "${DB_PASSWORD}"
            POSTGRES_USER: "${DB_USERNAME}"
            POSTGRES_DB: "${DB_NAME}"

    data:
        image: postgres:9.3
        hostname: "${PROJECT_NAME}_postgres_data"
        container_name: "${PROJECT_NAME}_postgres_data"
        volumes:
            - /var/lib/postgresql/data
            - ./src/db:/db
        command: "true"
